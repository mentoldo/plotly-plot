g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3],
slope = coef(fit)[2] + coef(fit)[4], size = 2)
g1
## Just to show you it can be done
summary(lm(Fertility ~ Agriculture + Agriculture : factor(CatholicBin), data = swiss))$coef
## Exercises
## 1.
data("Seatbelts")
str(dat)
dat <- as.data.frame(Seatbelts)
str(dat)
dat
attributes(Seatbelts)
fit <- lm(DriversKilled ~ kms + PetrolPrice, data = dat)
summary(fit)
## Exercises
## 1.
data("Seatbelts")
str(dat)
str(Seatbelts)
Seatbelts$DriversKilled
Seatbelts[1]
Seatbelts[[1]]
Seatbelts[[2]]
Seatbelts[[,1]]
Seatbelts[[1,]]
Seatbelts[1,]
Seatbelts[,1]
fit <- lm(DriversKilled ~ kms + PetrolPrice, data = dat)
fit
seatbelts <- mutate(dat,
pp = (PetrolPrice - mean(PetrolPrice)) / sd (PetrolPrice),
mm = kms / 1000,
mmc = mm - mean(mm))
head(seatbelts)
fit <- lm(DriversKilled ~ pp + mmc, data = seatbelts)
summary(fit)
seatbelts <- mutate(dat,
pp = (PetrolPrice - mean(PetrolPrice)) / sd (PetrolPrice),
mm = log(kms),
mmc = mm - mean(mm))
fit <- lm(DriversKilled ~ pp + mmc, data = seatbelts)
summary(fit)
seatbelts <- mutate(dat,
pp = (PetrolPrice - mean(PetrolPrice)) / sd (PetrolPrice),
mm = kms / 1000,
mmc = mm - mean(mm))
fit <- lm(DriversKilled ~ pp + mmc, data = seatbelts)
summary(fit)
fit <- lm(I(log(DriversKilled)) ~ pp + mmc, data = seatbelts)
summary(fit)
exp(-0.064126)
exp(0.14)
exp(0.04)
exp(10)
?log
1 - exp(-0.064126)
exp(-0.014008)
1 - exp(-0.014008)
## 3
seatbelts$law
fit <- lm(DriversKilled ~ pp + mmc + factor(law), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + relevel(factor(law), 1), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + factor(law), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + relevel(factor(law), 1), data = seatbelts)
summary(fit)
## 3
seatbelts$law
## 3
str(seatbelts$law)
## 3
class(seatbelts$law)
## 3
factor(seatbelts$law)
fit <- lm(DriversKilled ~ pp + mmc + factor(law), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + relevel(factor(law), "1"), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + factor(law), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + relevel(factor(law), "1"), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + factor(law), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + relevel(factor(law), "1"), data = seatbelts)
summary(fit)
seatbelts$lawRec <- factor(seatbelts$law, levels = 0:1, labels = c("No", "Yes"))
fit <- lm(DriversKilled ~ pp + mmc + relevel(lawRec, "Yes"), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + factor(law), data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ pp + mmc + lawRec, data = seatbelts)
summary(fit)
## 4
cut(seatbelts$pp, seq(0, 1, by = 4))
seq(0, 1, by = 4)
## 4
cut(seatbelts$pp, seq(0, 1, length.out = 4))
seq(0, 1, length.out = 4)
## 4
cut(seatbelts$pp, seq(0, 1, length.out = 5))
seatbelts$pp
## 4
cut(seatbelts$pp, seq(range(seatbelts$pp), length.out = 5))
range(seatbelts$pp)
quantile(seatbelts$pp)
## 4
cut(seatbelts$pp, quantile(seatbelts$pp))
## 4
seatbelts$ppq <- cut(seatbelts$pp, quantile(seatbelts$pp))
fit <- lm(DriversKilled ~ ppc + mmc + relevel(lawRec, "Yes"), data = seatbelts)
fit <- lm(DriversKilled ~ ppq + mmc + relevel(lawRec, "Yes"), data = seatbelts)
summary(fit)
seatbelts <- mutate(seatbelts,
pp = (PetrolPrice - mean(PetrolPrice)) / sd(PetrolPrice),
ppf = as.factor((pp <= -1.5) + (pp <= 0) + (pp <= 1.5) + (pp <= Inf)),
mm = hms / 1000,
mmc = mm - mean(mm))
seatbelts <- mutate(seatbelts,
pp = (PetrolPrice - mean(PetrolPrice)) / sd(PetrolPrice),
ppf = as.factor((pp <= -1.5) + (pp <= 0) + (pp <= 1.5) + (pp <= Inf)),
mm = kms / 1000,
mmc = mm - mean(mm))
str(seatbelts)
fit <- lm(DriversKilled ~ pp + mmc + law, data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ ppf + mmc + law, data = seatbelts)
summary(fit)
## 5
library(datasets); data(swiss)
head(swiss)
library(dplyr);
swiss = mutate(swiss, CatholicBin = 1 * (Catholic > 50))
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = factor(CatholicBin)))
g = g + geom_point(size = 6, colour = "black") + geom_point(size = 4)
g = g + xlab("% in Agriculture") + ylab("Fertility")
g
fit = lm(Fertility ~ Agriculture * factor(CatholicBin), data = swiss)
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1 = g1 + geom_abline(intercept = coef(fit)[1] + coef(fit)[3],
slope = coef(fit)[2] + coef(fit)[4], size = 2)
g1
## Simulation 1
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
rep(c(0, 1), c(n/2, n/2))
c(runif(n/2), runif(n/2)
)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 2
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), 1.5 + runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 0; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 3
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), .9 + runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- -1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 4
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(.5 + runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 5
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
fit
summary(fit)
## Simulation 5
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
summary(fit)
## Simulation 5
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 5
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 5
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
## Simulation 5
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2, -1, 1), runif(n/2, -1, 1));
beta0 <- 0; beta1 <- 2; tau <- 0; tau1 <- -4; sigma <- .2
y <- beta0 + x * beta1 + t * tau + t * x * tau1 + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t + I(x * t))
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2] + coef(fit)[4], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
summary(fit)
### Simulation 6
p <- 1
n <- 100; x2 <- runif(n); x1 <- p * runif(n) - (1 - p) * x2
beta0 <- 0; beta1 <- 1; tau <- 4 ; sigma <- .01
y <- beta0 + x1 * beta1 + tau * x2 + rnorm(n, sd = sigma)
plot(x1, y, type = "n", frame = FALSE)
abline(lm(y ~ x1), lwd = 2)
co.pal <- heat.colors(n)
points(x1, y, pch = 21, col = "black", bg = co.pal[round((n - 1) * x2 + 1)], cex = 2)
## Do this to investigate the bivariate relationship
library(rgl)
plot3d(x1, x2, y)
### Residual relationship
plot(resid(lm(x1 ~ x2)), resid(lm(y ~ x2)), frame = FALSE, col = "black", bg = "lightblue", pch = 21, cex = 2)
abline(lm(I(resid(lm(x1 ~ x2))) ~ I(resid(lm(y ~ x2)))), lwd = 2)
## Exercises
## 1
data("Seatbelts")
str(dat)
dat <- as.data.frame(Seatbelts)
dat
attributes(Seatbelts)
fit <- lm(DriversKilled ~ kms + PetrolPrice, data = dat)
summary(fit)
## 2
fit <- lm(DriversKilled ~ kms, data = dat)
summary(fit)
fit <- lm(DriversKilled ~ kms + PetrolPrice, data = dat)
summary(fit)
fit <- lm(DriversKilled ~ PetrolPrice, data = dat)
summary(fit)
## 2
fit <- lm(DriversKilled ~ mm, data = dat)
## 2
fit <- lm(DriversKilled ~ mm, data = dat)
seatbelts <- mutate(dat,
pp = (PetrolPrice - mean(PetrolPrice)) / sd (PetrolPrice),
mm = kms / 1000,
mmc = mm - mean(mm))
dat <- as.data.frame(Seatbelts)
dat
attributes(Seatbelts)
fit <- lm(DriversKilled ~ kms + PetrolPrice, data = dat)
summary(fit)
library(dplyr)
seatbelts <- mutate(dat,
pp = (PetrolPrice - mean(PetrolPrice)) / sd (PetrolPrice),
mm = kms / 1000,
mmc = mm - mean(mm))
head(seatbelts)
## 2
fit <- lm(DriversKilled ~ mm, data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ kms + PetrolPrice, data = seatbelts)
summary(fit)
fit <- lm(DriversKilled ~ kms + pp, data = seatbelts)
summary(fit)
## 2
fit0 <- lm(DriversKilled ~ mm, data = seatbelts)
summary(fit)
anova(fit0, fit1)
## 2
fit0 <- lm(DriversKilled ~ mm, data = seatbelts)
summary(fit)
fit1 <- lm(DriversKilled ~ kms + pp, data = seatbelts)
summary(fit)
anova(fit0, fit1)
## 3
fit0 <- lm(DriversKilled ~ mmc, data = seatbelts)
fit1 <- lm(DriversKilled ~ mmc + pp, data = seatbelts)
summary(fit)
## 3
fit0 <- lm(DriversKilled ~ mmc, data = seatbelts)
summary(fit)
fit1 <- lm(DriversKilled ~ mmc + pp, data = seatbelts)
summary(fit)
anova(fit0, fit1)
## 3
fit0 <- lm(DriversKilled ~ pp, data = seatbelts)
summary(fit)
fit1 <- lm(DriversKilled ~ pp + mmc, data = seatbelts)
summary(fit)
anova(fit0, fit1)
## 3
fit0 <- lm(DriversKilled ~ pp, data = seatbelts)
summary(fit0)
fit1 <- lm(DriversKilled ~ pp + mmc, data = seatbelts)
summary(fit1)
## Residuals, variation and diagnostic ##
## *********************************** ##
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
## Influential, high leverage and outlying points
n <- 100; x <- rnorm(n); y <- x + rnorm(n, sd = .3)
plot(c(-3, 6), c(-3, 6), type = "n", frame = FALSE, xlab = "X", ylab = "Y")
abline(lm(y ~ x), lwd = 2)
points(x, y, cex = 2, bg = "lightblue", col = "black", pch = 21)
points(0, 0, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(0, 5, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(5, 5, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(5, 0, cex = 2, bg = "darkorange", col = "black", pch = 21)
par(mfrow = c(1, 1))
plot(c(-3, 6), c(-3, 6), type = "n", frame = FALSE, xlab = "X", ylab = "Y")
abline(lm(y ~ x), lwd = 2)
points(x, y, cex = 2, bg = "lightblue", col = "black", pch = 21)
points(0, 0, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(0, 5, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(5, 5, cex = 2, bg = "darkorange", col = "black", pch = 21)
points(5, 0, cex = 2, bg = "darkorange", col = "black", pch = 21)
?influence.measures
rbinom(10, 1, 0,5)
rbinom(10, 1, 0.5)
rbinom(10, 2, 0.5)
rbinom(10, 2, 0.5)
rbinom(10, 10, 0.5)
data(mtcars)
fit <- lm(mpg ~ am, data = mtcars)
r1 <- summary(fit1)$adj.r.squared
r2 <- summary(fit2)$adj.r.squared
r3 <- summary(fit3)$adj.r.squared
r4 <- summary(fit4)$adj.r.squared
r5 <- summary(fit5)$adj.r.squared
?mtcars
fit6 <- lm(mpg ~ Transmission + wt + qsec + wt * Transmission, data = mtcars)
fit1 <- lm(mpg ~ Transmission, data = mtcars)
fit2 <- lm(mpg ~ Transmission + hp, data = mtcars)
fit3 <- lm(mpg ~ Transmission + wt + hp, data = mtcars)
fit4 <- lm(mpg ~ Transmission + wt + cyl, data = mtcars)
fit5 <- lm(mpg ~ Transmission + wt + hp + wt * Transmission, data = mtcars)
fit6 <- lm(mpg ~ Transmission + wt + wt * Transmission, data = mtcars)
fit7 <- lm(mpg ~ Transmission + wt + qsec + wt * Transmission, data = mtcars)
## Exploratory
library(ggplot2)
library(dplyr)
data(mtcars)
mtcars <- mtcars %>%
mutate(Transmission = factor(am, levels = c(0,1), labels = c("Automatic", "Manual")))
fit7 <- lm(mpg ~ Transmission + wt + qsec + wt * Transmission, data = mtcars)
anova(fit1, fit2, fit3, fit6, fit, fit7)
fit1 <- lm(mpg ~ Transmission, data = mtcars)
fit2 <- lm(mpg ~ Transmission + hp, data = mtcars)
fit3 <- lm(mpg ~ Transmission + wt + hp, data = mtcars)
fit4 <- lm(mpg ~ Transmission + wt + cyl, data = mtcars)
fit5 <- lm(mpg ~ Transmission + wt + hp + wt * Transmission, data = mtcars)
fit6 <- lm(mpg ~ Transmission + wt + wt * Transmission, data = mtcars)
fit7 <- lm(mpg ~ Transmission + wt + qsec + wt * Transmission, data = mtcars)
r1 <- summary(fit1)$adj.r.squared
anova(fit1, fit2, fit3, fit6, fit, fit7)
anova(fit1, fit3, fit6, fit7)
r1 <- summary(fit1)$adj.r.squared
r3 <- summary(fit3)$adj.r.squared
r6 <- summary(fit6)$adj.r.squared
r7 <- summary(fit7)$adj.r.squared
r7
summary(fit7)
plot(fit7)
library(cars)
vif(fit7)
library(car)
vif(fit7)
fit8 <- lm(mpg ~ Transmission + wt + qsec, data = mtcars)
fit8
anova(fit1, fit3, fit6, fit8,fit7)
r8 <- summary(fit8)$adj.r.squared
r8
r7
r6
sqrt(fit(fit7))
sqrt(vif(fit7))
aov(fit7)
anova(fit7)
anova(fit6)
anova(fit7)
anova(fit8)
g <- ggplot(data = mtcars, aes(x = wt, y = mpg, col = Transmission))
g + geom_point() +
labs(x = "Weigth (x1000 lbs)", y = "Miles per Galon") +
geom_abline(intercept = coef(fit5)[1], slope = coef(fit5)[3], col = 1) +
geom_abline(intercept = coef(fit5)[1] + coef(fit5)[2], slope = coef(fit5)[3] + coef(fit5)[5], col = 2)
g <- ggplot(data = mtcars, aes(x = wt, y = mpg, col = Transmission))
g + geom_point() +
labs(x = "Weigth (x1000 lbs)", y = "Miles per Galon") +
geom_smooth(method = lm)
plot(fit7)
anova(fit7)
fit7$residuals
shapiro.test(fit7$residuals)
mtcars[!(nrows(mtcars) %in% c(3,8,18),]
mtcars[!(nrows(mtcars) %in% c(3,8,18)), ]
mtcars[!(rownames(mtcars) %in% c(3,8,18)), ]
mtcars <- mtcars[!(rownames(mtcars) %in% c(3,8,18)), ]
## ***************** ##
## better model fit7 ##
## ***************** ##
fit7 <- lm(mpg ~ Transmission + wt + qsec + wt * Transmission, data = mtcars)
anova(fit7)
summary(fit7)
plot(fit7)
plot(fit7)
g + geom_point() +
labs(x = "Weigth (x1000 lbs)", y = "Miles per Galon") +
geom_abline(intercept = coef(fit5)[1], slope = coef(fit5)[3], col = 1) +
geom_abline(intercept = coef(fit5)[1] + coef(fit5)[2], slope = coef(fit5)[3] + coef(fit5)[5], col = 2)
g <- ggplot(data = mtcars, aes(x = wt, y = mpg, col = Transmission))
g + geom_point() +
labs(x = "Weigth (x1000 lbs)", y = "Miles per Galon") +
geom_smooth(method = lm)
?mtcars
## ***************** ##
## better model fit7 ##
## ***************** ##
fit7 <- lm(mpg ~ Transmission + wt + qsec + wt * Transmission, data = mtcars)
anova(fit7)
summary(fit7)
fit1 <- lm(mpg ~ Transmission, data = mtcars)
summary(fit1)
head(mtcars)
summary(fit7)
?plot
?mean
setwd("~/Escritorio/DataScience/Coursera/Proyectos/data-product/semana3")
ls()
dir()
setwd("assignment-markdown/")
dir()
ls()
